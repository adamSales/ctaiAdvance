model{
 ## measurement model
 for(sw in 1:nsecWorked){
 # gradNew[sw] ~ dbern(probB[sw])
  grad[sw] ~ dbern(prob[sw])
  prob[sw] <- 1/(1+exp(-linPred[sw]))
  linPred[sw] <- studEff[studentM[sw]]+secEff[section[sw]]
 }
 for(i in 1:nstud){

  ### Usage
  studEff[i] ~ dnorm(muU[i],tauU)
  muU[i] <- X[i,]%*%betaU+schoolEffU[school[i]]



### Outcome
  Ynew[i] ~ dnorm(muY[i],tauY[Z[i]+1])
  Y[i] ~ dnorm(muY[i],tauY[Z[i]+1])
  muY[i] <- alphaY+X[i,]%*%betaY + useEff[i]+trtEff[i]*Z[i]+classEffY[cid[i]]+pairEffect[pair[i]]+schoolEffY[school[i]]

  useEff[i] <- bu*studEff[i]+inprod(zz[i,],uu)
  trtEff[i] <- bt*studEff[i]+inprod(zz[i,],ut)

 }

 bt~dnorm(0,1/3)
 bu~dnorm(0,1/3)
 for(cls in 1:nclass){
  classEffU[cls]~dnorm(0,tauClsU[Zcls[cls]+1])
  classEffY[cls]~dnorm(0,tauClsY[Zcls[cls]+1])
 }
 for(scl in 1:nscl){
  schoolEffY[scl]~dnorm(tau*Zscl[scl],tauSclY[Zscl[scl]+1])
  schoolEffU[scl]~dnorm(0,tauSclU)
 }

 for(k in 1:nknots){
  uu[k]~dnorm(0,tauuu)
  ut[k]~dnorm(0,tauut)
 }

 for(covar in 1:ncovar){
  betaU[covar]~dnorm(0,1/3)
  betaY[covar]~dnorm(0,1/3)
 }

 for(pp in 1:npair){
  pairEffect[pp] ~ dnorm(0,1/3)
 }
 for(sec in 1:nsec){
  secEff[sec]~dnorm(0,1/100)
 }
 #for(un in 1:nunit){
 # unitEff[un]~dnorm(0,tauUn)
 #}
 alphaU~dnorm(0,1/100)


#### priors for variance components: sigma~uniform

 tau~dnorm(0,1)
 alphaY~dnorm(0,1/3)

 tauU <- pow(sigU,-2)
 sigU ~ dunif(1/100,10)

 tauUn <- pow(sigUn,-2)
 sigUn ~ dunif(1/100,10)

 tauSec <- pow(sigSec,-2)
 sigSec ~ dunif(1/100,10)



 tauY[1] <- pow(sigY[1],-2)
 sigY[1] ~ dunif(1/100,10)
 tauY[2] <- pow(sigY[2],-2)
 sigY[2] ~ dunif(1/100,10)


 tauClsY[1] <- pow(sigClsY[1],-2)
 sigClsY[1] ~ dunif(1/100,10)
 tauClsY[2] <- pow(sigClsY[2],-2)
 sigClsY[2] ~ dunif(1/100,10)

 tauClsU[1] <- pow(sigClsU[1],-2)
 sigClsU[1] ~ dunif(1/100,10)
 tauClsU[2] <- pow(sigClsU[2],-2)
 sigClsU[2] ~ dunif(1/100,10)


 tauSclY[1] <- pow(sigSclY[1],-2)
 sigSclY[1] ~ dunif(1/100,10)
 tauSclY[2] <- pow(sigSclY[2],-2)
 sigSclY[2] ~ dunif(1/100,10)

 tauSclU <- pow(sigSclU,-2)
 sigSclU ~ dunif(1/100,10)

 tauuu <- pow(siguuu,-2)
 siguuu ~ dunif(1/100,2)

 tauut <- pow(siguut,-2)
 siguut ~ dunif(1/100,1)



 for(ii in 1:nstud){
  for(kk in 1:nknots){
   zz[ii,kk]<- (studEff[ii]-knot[kk])*step(studEff[ii]-knot[kk])
  }
 }

}