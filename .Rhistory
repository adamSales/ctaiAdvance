getOption('mc.cores')
sdatF <- makeStanDat(datF,advanceF)
debugonce(makeStanDat)
sdatF <- makeStanDat(datF,advanceF)
str(makeStanDat)
str(sdatF)
str(datF)
sdatF <- makeStanDat(datF,advanceF)
dim(datF)
dim(dat2)
dim(datF)
dim(dat2)
mean(datF$Y)
mean(dat2$Y)
head(datF$schoolid2)
head(dat2$schoolid2)
head(datF$field_id)
head(dat2$field_id)
getwd()
 setwd('~/Google Drive/CT/advance/')
ls()
printStan(noEff)
printStan(constEff)
rm(constEff,noEff)
sizes()
dim(dat)
str(U)
str(sdat)
str(sdatFake)
str(sdatF)
head(sdat$Y)
head(sdat$Y[sdat$Z==1])
head(sdatF$Y)
head(dat$Y)
hist(datF$U)
hist(datF$U[datF$treatment==1])
sum(datF$U< -4)
str(main)
slotNames(main)
str(summary(main)[[1]])
mean(datF$te)
str(sdatFlin)
head(sdatFlin$studentM)
unique(sdatFlin$Z[sdatFlin$studentM])
max(sdatFlin$studentM)
debug(makeStanDat)
sdatFlin <- makeStanDat(datF,advance)
stanDat$nstud
length(stanDat$pair)
mean(advance$field_id%in%dat$field_id)
Q
mean(s
mean(advanceF$field_id%in%datF$field_id)
sum(datF$field_id[datF$treatment==0]%in%advanceF$field_id)
undebug(makeStanDat)
head(sdatFlin$studentM)
unique(sdatFlin$Z[sdatFlin$studentM])
mean(datF$te[datF$treatment==1])
plot(datF$U[datF$treatment==0],datF$te[sdatFlin$Z==1])
plot(datF$U[datF$treatment==0],datF$te[sdatFlin$Z==1])
plot(datF$U,datF$te)
plot(datF$U[datF$treatment==1],datF$te[datF$treatment==1])
all.equal(datF$treatment,sdatFlin$Z)
sizes()
q('no')
library(rstan)
getwd()
setwd('~/Google Drive/CT/advance/')
[load('fittedModels/mbarModel.RData')
pload('fittedModels/mbarModel.RData')
samps <- extract(mod)
mod@model_pars
names(sdat)
plotDat <- with(sdat,data.frame(Y=c(YtO,YtM,Yc),mbar=c(MbarTO,colMeans(samps$MbarTM),colMeans(samps$MbarC)),Z=c(rep(1,nstudTO),rep(1,nstudTM),rep(0,nstudC))))
library(ggplot2)
ggplot(plotDat,aes(mbar,Y,fill=Z))+geom_point()+geom_smooth(method='lm')
ggplot(plotDat,aes(mbar,Y,fill=Z,group=Z,color=Z))+geom_point()+geom_smooth(method='lm')
printStan(mod)
3.5/.37
plotDat <- with(sdat,data.frame(Y=c(YtO,YtM,Yc),mbar=c(MbarTO,samps$MbarTM[500,],samps$MbarC[,500]),Z=c(rep(1,nstudTO),rep(1,nstudTM),rep(0,nstudC))))
plotDat <- with(sdat,data.frame(Y=c(YtO,YtM,Yc),mbar=c(MbarTO,samps$MbarTM[500,],samps$MbarC[500,]),Z=c(rep(1,nstudTO),rep(1,nstudTM),rep(0,nstudC))))
ggplot(plotDat,aes(mbar,Y,fill=Z,group=Z,color=Z))+geom_point()+geom_smooth(method='lm')
ggplot(plotDat,aes(mbar,Y,fill=Z,group=Z,color=Z))+geom_point()+geom_smooth(method='lm',se=F,width=2)
?geom_smooth
ggplot(plotDat,aes(mbar,Y,fill=Z,group=Z,color=Z))+geom_point()+geom_smooth(method='lm',se=F,size=2)
?geom_point
ggplot(plotDat,aes(mbar,Y,fill=Z,group=Z,color=Z))+geom_point(alpha=.5)+geom_smooth(method='lm',se=F,size=2)
ggplot(plotDat,aes(mbar,Y,fill=as.factor(Z),group=as.factor(Z),color=as.factor(Z)))+geom_point(alpha=.5)+geom_smooth(method='lm',se=F,size=2)
mean(sdat$MbarT<0.5)
load('fittedModels/stanMod.RData')
sdatMbar <- sdat
sdatMbar <- sdat
pload('fittedModels/stanMod.RData')
main@par_dims
main@par_dims$secEff
names(sdat)
usageDat <- with(sdat,data.frame(stud=studentM,sec=section))
mDiff
mDiff <- rep(NA,nrow(dat))
dim(dat)
secDiff <- colMeans(extract(main,'secEff')[[1]])
secDiff
mDiff <- aggregate(secDiff[usageDat$sec],list(stud=usageDat$studentM),MEAN)
mDiff <- aggregate(secDiff[usageDat$sec],list(stud=usageDat$studentM),mean)
sss <- secDiff[sdat$sec]
length(sss)
mDiff <- aggregate(sss,list(stud=sdat$studentM),mean)
mbar <- aggregate(sdat$grad,list(sdat$studentM),mean)
head(mbar)
head(mDiff)
plot(mDiff$x,mbar$x)
plot(mDiff$x,colMeans(extract(main,'studEff')[[1]])[mDiff$stud])
cor(mDiff$x,mbar$x)
cor(mDiff$x,colMeans(extract(main,'studEff')[[1]])[mDiff$stud])
p
ggplot(plotDat,aes(mbar,Y,fill=as.factor(Z),group=as.factor(Z),color=as.factor(Z)))+geom_point(alpha=.5)+geom_smooth(method='lm',se=F,size=2)
head(plotDat)
?labs
 library(tikzDevice)
tikz(p)
getwd()
library(ggplot2)
p+legend.position('top')
p+theme(legend.position='top')
p
p
p
?tikz
names(sdat)
head(table(sdat$studentM)
)
dim(dat)
dim(dat)
head(dat)
with(dat,plot(mbar,nsec))
tikzTest('\\bar{m}')
dim(dat)
sdatMain <- sdat
datMain <- dat
advMain <- advance
sdat <- sdatMain
dat <- datMain
advance <- advMain
plot(mbar,mDiff)
plot(1:10)
plot(mbar,mDiff)
str(mbar)
plot(mbar$x,mDiff$x)
head(table(sdat$studentM))
head(sort(unique(sdat$studentM)))
head(nsec)
plot(nsec,eta)
names(mDiff)
?tikz
head(mDiff)
head(mDiff)
all.equal(mDiff$studEff,eta)
plot(nsec,etasd)
hist(1/plotDat$etasd)
range(1/plotDat$etasd)
range(1/plotDat$etasd^2)
range(1/plotDat$etasd)
3.5/.9
getwd()
rmarkdown::render('etaDiff.tex')
rmarkdown::render('etaDiff.tex',output_format='pdf')
?rmarkdown::render
rmarkdown::render('etaDiff.tex',output_format='pdf_document')
dim(etaDraws)
length(samps)
dim(samps[[1]])
str(samps[[1]])
draw <- 1000
dev.off()
dev.off()
dev.off()
class(mod)
source('~/gitRepos/ctaiAdvance/mbarModelFig.r')
names(sdat)
names(sdatObs)
class(mod)
class(main)
dim(dat)
str(plotDat)
source('~/gitRepos/ctaiAdvance/mbarModelFig.r')
str(sss)
str(sdat)
q('no')
